package roomescape.reservation.infrastructure.fake;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import roomescape.reservation.application.repository.ThemeRepository;
import roomescape.reservation.domain.Theme;
import roomescape.reservation.presentation.dto.ThemeRequest;

public class FakeThemeDao implements ThemeRepository {
    private Long autoGeneratedId = 0L;
    private final Map<Long, Theme> store = new HashMap<>();

    @Override
    public Theme insert(ThemeRequest themeRequest) {
        autoGeneratedId++;
        Theme theme = new Theme(autoGeneratedId, themeRequest.getName(), themeRequest.getDescription(),
                themeRequest.getThumbnail());
        store.put(autoGeneratedId, theme);

        return theme;
    }

    @Override
    public List<Theme> findAllThemes() {
        return store.values().stream().toList();
    }

    @Override
    public void delete(Long id) {
        store.remove(id);
    }

    @Override
    public Optional<Theme> findById(Long themeId) {
        return store.values().stream()
                .filter(theme -> theme.getId().equals(themeId))
                .findAny();
    }
}
